# ~/.bash_prompt
# vim: set ft=sh:

__ps1_color() {
    local -A colormap
    colormap=(
        [reset]=0
        [default]=39

        [black]=30
        [red]=31
        [green]=32
        [yellow]=33
        [blue]=34
        [magenta]=35
        [cyan]=36
        [white]=37
    )

    # Bright versions are accessed by adding 60 to the color code
    if [[ $1 == 'bright' ]]; then
        shift
        colormap[$1]=$(( ${colormap[$1]} + 60 ))
    fi

    # Octal escapes must be used for brackets when dynamically evaluatng a
    # function call in PS1. (e.g. '\001' instead of '\[')
    printf '\001\033[0;%sm\002' "${colormap[$1]}"
}

__set_ec() {
    # Store the value of $? so we can act on it in PS1
    # This must be the first thing called by PROMPT_COMMAND
    _LAST_EC=$?
}

__ps1_ec() {
    if (( _LAST_EC != 0 )); then
        echo -n " $(__ps1_color bright red)[$_LAST_EC]"
    fi
}

__ps1_git() {
    local result

    # Indicate current git branch and changes, if any
    if git branch --show-current &>/dev/null; then
        result="[ $(git branch --show-current)"

        if (( $(git status -s | wc -l) > 0 )); then
            result+='*]'
        else
            result+=']'
        fi

        echo -n " $(__ps1_color yellow)${result}"
    fi
}

_set_ps1() {
    local ps1_theme="${1:-blue}"
    local ps1_user ps1_host ps1_pwd ps1_icon

    ps1_user="$(__ps1_color bright "${ps1_theme}")\u"
    ps1_host="$(__ps1_color "${ps1_theme}")@\h"
    ps1_pwd="$(__ps1_color white)[\w]"
    ps1_icon="$(__ps1_color white)▶"

    PS1="${ps1_user}${ps1_host} ${ps1_pwd}"
    PS1+='$(__ps1_ec)'
    PS1+='$(__ps1_git)'
    PS1+="\n"
    PS1+="${ps1_icon} "
    PS1+="$(__ps1_color reset)"
}

# First action must be to grab the exit code of the previous command.
# PROMPT_COMMAND is already set by /etc/profile.d/vte.sh, so preserve it
if [[ -n $PROMPT_COMMAND ]]; then
    PROMPT_COMMAND="__set_ec && $PROMPT_COMMAND"
else
    PROMPT_COMMAND="__set_ec"
fi
